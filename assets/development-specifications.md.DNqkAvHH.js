import{_ as a,c as i,o as n,ae as t}from"./chunks/framework.B8KKhRA6.js";const c=JSON.parse('{"title":"开发规范","description":"","frontmatter":{"title":"开发规范"},"headers":[],"relativePath":"development-specifications.md","filePath":"development-specifications.md"}'),e={name:"development-specifications.md"};function l(p,s,h,r,k,d){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="开发规范" tabindex="-1">开发规范 <a class="header-anchor" href="#开发规范" aria-label="Permalink to &quot;开发规范&quot;">​</a></h1><p>在开发组件库时，遵守一定的规范可以使得代码具有良好的可阅读性和扩展性</p><h2 id="组件目录结构" tabindex="-1">组件目录结构 <a class="header-anchor" href="#组件目录结构" aria-label="Permalink to &quot;组件目录结构&quot;">​</a></h2><p>:每个组件应遵循以下目录结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>src/</span></span>
<span class="line"><span>└── [组件名]/          # 组件目录，如 avatar/</span></span>
<span class="line"><span>    ├── interface.ts   # 类型定义文件，包含组件Props、事件等类型</span></span>
<span class="line"><span>    ├── index.ts       # 组件导出文件，对外暴露组件</span></span>
<span class="line"><span>    ├── index.vue      # 组件实现文件，包含模板、脚本和样式</span></span>
<span class="line"><span>    └── index.less     # 组件样式文件（可选）</span></span></code></pre></div><h3 id="文件说明" tabindex="-1">文件说明 <a class="header-anchor" href="#文件说明" aria-label="Permalink to &quot;文件说明&quot;">​</a></h3><ul><li><strong>interface.ts</strong>: 定义组件的Props、Emits、Slots等类型，确保类型安全</li><li><strong>index.ts</strong>: 统一导出组件，便于外部引用</li><li><strong>index.vue</strong>: 组件核心实现，包含模板、逻辑和样式引用</li><li><strong>index.less</strong>: 组件样式文件，采用less预处理器</li></ul><h2 id="示例-以avatar组件为例" tabindex="-1">示例（以Avatar组件为例） <a class="header-anchor" href="#示例-以avatar组件为例" aria-label="Permalink to &quot;示例（以Avatar组件为例）&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>src/</span></span>
<span class="line"><span>└── avatar/</span></span>
<span class="line"><span>    ├── interface.ts</span></span>
<span class="line"><span>    ├── index.ts</span></span>
<span class="line"><span>    ├── index.vue</span></span>
<span class="line"><span>    └── index.less</span></span></code></pre></div><h2 id="ts类型规范-以avatar组件为例" tabindex="-1">Ts类型规范(以Avatar组件为例) <a class="header-anchor" href="#ts类型规范-以avatar组件为例" aria-label="Permalink to &quot;Ts类型规范(以Avatar组件为例)&quot;">​</a></h2><ul><li>组件Props类型名(推荐)：AvatarProps</li><li>组件Emits类型名(推荐)：AvatarEmits</li><li>组件Slots类型名(推荐)：AvatarSlots</li></ul><h2 id="样式规范" tabindex="-1">样式规范 <a class="header-anchor" href="#样式规范" aria-label="Permalink to &quot;样式规范&quot;">​</a></h2><ul><li>组件样式文件：采用less预处理器编写样式，确保样式可复用和可维护</li><li>组件样式作用域：采用BEM规范编写样式，确保样式不会污染全局</li></ul><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><div class="language-less vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 定义组件变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avatar-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avatar-font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avatar-border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用变量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.avatar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avatar-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avatar-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avatar-font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">avatar-border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,15)]))}const E=a(e,[["render",l]]);export{c as __pageData,E as default};
